import { create } from 'zustand';
export interface KLEKey { id:string;x:number;y:number;w:number;h:number;rotationCenter:{x:number;y:number};rotationAngle:number;label?:string;binding?:string; }
interface LayoutState { keys:KLEKey[];selectedKeys:string[];setKeys:(k:KLEKey[])=>void;updateKey:(id:string,patch:Partial<KLEKey>)=>void;toggleSelect:(id:string)=>void;rotateSelected:(a:number)=>void;clearSelection:()=>void;}
export const useLayoutStore=create<LayoutState>((set)=>({keys:[],selectedKeys:[],setKeys:(keys)=>set({keys}),updateKey:(id,patch)=>set(s=>({keys:s.keys.map(k=>k.id===id?{...k,...patch}:k)})),toggleSelect:(id)=>set(s=>({selectedKeys:s.selectedKeys.includes(id)?s.selectedKeys.filter(i=>i!==id):[...s.selectedKeys,id]})),rotateSelected:(a)=>set(s=>({keys:s.keys.map(k=>s.selectedKeys.includes(k.id)?{...k,rotationAngle:(k.rotationAngle+a)%360}:k)})),clearSelection:()=>set({selectedKeys:[]})}));
